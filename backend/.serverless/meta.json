{
  "D:\\Careerpath\\cloud\\aws\\clouddeveloperudacity\\deployserlvess\\udagram-cloud-develop-cd12101\\backend": {
    "versionSfCore": null,
    "versionFramework": "4.4.1",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "udagram-cloud-develop-cd12101",
            "build": {
              "esbuild": false
            },
            "plugins": [
              "serverless-webpack",
              "serverless-iam-roles-per-function",
              "serverless-plugin-tracing",
              "serverless-reqvalidator-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs16.x",
              "lambdaHashingVersion": "01092000",
              "stage": "dev",
              "region": "us-east-1",
              "tracing": {
                "lambda": true,
                "apiGateway": true
              },
              "environment": {
                "TODOS_TABLE": "Todos-Final-dev",
                "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                "SIGNED_URL_EXPIRATION": "300"
              },
              "logs": {
                "restApi": true
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "xray:PutTelemetryRecords",
                        "xray:PutTraceSegments",
                        "s3:PutBucketPolicy"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AuthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-Auth"
                    }
                  },
                  "GetTodosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos"
                    }
                  },
                  "CreateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo"
                    }
                  },
                  "UpdateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo"
                    }
                  },
                  "DeleteTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo"
                    }
                  },
                  "GenerateUploadUrlLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTelemetryRecords",
                                  "xray:PutTraceSegments",
                                  "s3:PutBucketPolicy"
                                ],
                                "Resource": "*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords"
                                ],
                                "Resource": [
                                  "*"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/auth/auth0Authorizer.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-Auth",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AuthLogGroup"
                    ]
                  },
                  "GetTodosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/getTodos.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GetTodos",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GetTodosIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetTodosIamRoleLambdaExecution",
                      "GetTodosLogGroup"
                    ]
                  },
                  "CreateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/createTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "CreateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateTodoIamRoleLambdaExecution",
                      "CreateTodoLogGroup"
                    ]
                  },
                  "UpdateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/updateTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "UpdateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoIamRoleLambdaExecution",
                      "UpdateTodoLogGroup"
                    ]
                  },
                  "DeleteTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/deleteTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "DeleteTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteTodoIamRoleLambdaExecution",
                      "DeleteTodoLogGroup"
                    ]
                  },
                  "GenerateUploadUrlLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/generateUploadUrl.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GenerateUploadUrlIamRoleLambdaExecution",
                      "GenerateUploadUrlLogGroup"
                    ]
                  },
                  "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AuthLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetTodosLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GenerateUploadUrlLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-udagram-cloud-develop-cd12101",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTodos": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "todos",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "PathPart": "{todoId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVarAttachment": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "PathPart": "attachment",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetTodosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GenerateUploadUrlLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayUdagramclouddevelopcd12101RequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "udagram-cloud-develop-cd12101-dev | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodTodosPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "description": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "dueDate": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          }
                        },
                        "required": [
                          "name",
                          "dueDate",
                          "description"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "dueDate": {
                            "type": "string"
                          },
                          "status": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "dueDate",
                          "status"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "AuthApiGatewayAuthorizer": {
                    "Type": "AWS::ApiGateway::Authorizer",
                    "Properties": {
                      "IdentitySource": "method.request.header.Authorization",
                      "Name": "Auth",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "AuthorizerUri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "AuthLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "Type": "TOKEN"
                    }
                  },
                  "ApiGatewayDeployment1727214570840": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTodosOptions",
                      "ApiGatewayMethodTodosTodoidVarOptions",
                      "ApiGatewayMethodTodosTodoidVarAttachmentOptions",
                      "ApiGatewayMethodTodosGet",
                      "ApiGatewayMethodTodosPost",
                      "ApiGatewayMethodTodosTodoidVarPatch",
                      "ApiGatewayMethodTodosTodoidVarDelete",
                      "ApiGatewayMethodTodosTodoidVarAttachmentPost"
                    ]
                  },
                  "GetTodosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetTodosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AuthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GenerateUploadUrlLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiGatewayLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/api-gateway/udagram-cloud-develop-cd12101-dev"
                    }
                  },
                  "CustomApiGatewayAccountCloudWatchRole": {
                    "Type": "Custom::ApiGatewayAccountRole",
                    "Version": "1.0",
                    "Properties": {
                      "ServiceToken": "<REDACTED>"
                    }
                  },
                  "IamRoleCustomResourcesLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "dev",
                                "udagram-cloud-develop-cd12101",
                                "custom-resources-lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "iam:",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      "role/*"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "iam:AttachRolePolicy",
                                  "iam:CreateRole",
                                  "iam:ListAttachedRolePolicies",
                                  "iam:PassRole"
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "apigateway:*::/account"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "apigateway:GET",
                                  "apigateway:PATCH"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/custom-resources.zip"
                      },
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role",
                      "Handler": "api-gateway-cloud-watch-role/handler.handler",
                      "MemorySize": 1024,
                      "Runtime": "nodejs20.x",
                      "Timeout": 180,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleCustomResourcesLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "IamRoleCustomResourcesLambdaExecution",
                      "CustomDashresourceDashapigwDashcwDashroleLogGroup"
                    ]
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role"
                    }
                  },
                  "GetTodosIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GetTodos",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "CreateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "CreateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "UpdateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "UpdateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "DeleteTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:DeleteObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "DeleteTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GenerateUploadUrlIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:PutObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GenerateUploadUrl",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GatewayResponseDefault4XX": {
                    "Type": "AWS::ApiGateway::GatewayResponse",
                    "Properties": {
                      "ResponseParameters": {
                        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                        "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                        "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                      },
                      "ResponseType": "DEFAULT_4XX",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "TodosTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "todoId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "createAt",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "todoId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "TableName": "Todos-Final-dev",
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "CreatedAtIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "userId",
                              "KeyType": "HASH"
                            },
                            {
                              "AttributeName": "createAt",
                              "KeyType": "RANGE"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ]
                    }
                  },
                  "AttachmentsBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                      "OwnershipControls": {
                        "Rules": [
                          {
                            "ObjectOwnership": "ObjectWriter"
                          }
                        ]
                      },
                      "PublicAccessBlockConfiguration": {
                        "BlockPublicAcls": false,
                        "BlockPublicPolicy": false,
                        "IgnorePublicAcls": false,
                        "RestrictPublicBuckets": false
                      },
                      "CorsConfiguration": {
                        "CorsRules": [
                          {
                            "AllowedOrigins": [
                              "*"
                            ],
                            "AllowedHeaders": [
                              "*"
                            ],
                            "AllowedMethods": [
                              "GET",
                              "PUT",
                              "POST",
                              "DELETE",
                              "HEAD"
                            ],
                            "MaxAge": 3000
                          }
                        ]
                      }
                    }
                  },
                  "BucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "PolicyDocument": {
                        "Id": "MyPolicy",
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Sid": "PublicReadForGetBucketObjects",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "*",
                            "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                          }
                        ]
                      },
                      "Bucket": {
                        "Ref": "AttachmentsBucket"
                      }
                    }
                  },
                  "RequestBodyValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "Name": "request-body-validator",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": false
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AuthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-AuthLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetTodosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GetTodosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-CreateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-UpdateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-DeleteTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "GenerateUploadUrlLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "documentation": {
                "api": {
                  "info": {
                    "version": "v1.0.0",
                    "title": "Udacity Serverless TODO items",
                    "description": "Serverless TODO items managant tool"
                  }
                },
                "models": [
                  {
                    "name": "CreateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "description": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "dueDate": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        }
                      },
                      "required": [
                        "name",
                        "dueDate",
                        "description"
                      ],
                      "additionalProperties": false
                    }
                  },
                  {
                    "name": "UpdateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "dueDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "dueDate",
                        "status"
                      ],
                      "additionalProperties": false
                    }
                  }
                ]
              }
            },
            "functions": {
              "Auth": {
                "handler": "src/lambda/auth/auth0Authorizer.handler",
                "events": [],
                "name": "udagram-cloud-develop-cd12101-dev-Auth",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
              },
              "GetTodos": {
                "handler": "src/lambda/http/getTodos.handler",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GetTodos",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
              },
              "CreateTodo": {
                "handler": "src/lambda/http/createTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "description": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "dueDate": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              }
                            },
                            "required": [
                              "name",
                              "dueDate",
                              "description"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:PutItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
              },
              "UpdateTodo": {
                "handler": "src/lambda/http/updateTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "patch",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "dueDate": {
                                "type": "string"
                              },
                              "status": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "dueDate",
                              "status"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
              },
              "DeleteTodo": {
                "handler": "src/lambda/http/deleteTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "delete",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:DeleteItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:DeleteObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
              },
              "GenerateUploadUrl": {
                "handler": "src/lambda/http/generateUploadUrl.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos/{todoId}/attachment",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
              }
            },
            "resources": {
              "Resources": {
                "GatewayResponseDefault4XX": {
                  "Type": "AWS::ApiGateway::GatewayResponse",
                  "Properties": {
                    "ResponseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                      "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                      "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                    },
                    "ResponseType": "DEFAULT_4XX",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    }
                  }
                },
                "TodosTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "todoId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "createAt",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "todoId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "TableName": "Todos-Final-dev",
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "CreatedAtIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          },
                          {
                            "AttributeName": "createAt",
                            "KeyType": "RANGE"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ]
                  }
                },
                "AttachmentsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                    "OwnershipControls": {
                      "Rules": [
                        {
                          "ObjectOwnership": "ObjectWriter"
                        }
                      ]
                    },
                    "PublicAccessBlockConfiguration": {
                      "BlockPublicAcls": false,
                      "BlockPublicPolicy": false,
                      "IgnorePublicAcls": false,
                      "RestrictPublicBuckets": false
                    },
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedOrigins": [
                            "*"
                          ],
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                },
                "BucketPolicy": {
                  "Type": "AWS::S3::BucketPolicy",
                  "Properties": {
                    "PolicyDocument": {
                      "Id": "MyPolicy",
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Sid": "PublicReadForGetBucketObjects",
                          "Effect": "Allow",
                          "Principal": "*",
                          "Action": "*",
                          "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                        }
                      ]
                    },
                    "Bucket": {
                      "Ref": "AttachmentsBucket"
                    }
                  }
                },
                "RequestBodyValidator": {
                  "Type": "AWS::ApiGateway::RequestValidator",
                  "Properties": {
                    "Name": "request-body-validator",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "ValidateRequestBody": true,
                    "ValidateRequestParameters": false
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "D:\\Careerpath\\cloud\\aws\\clouddeveloperudacity\\deployserlvess\\udagram-cloud-develop-cd12101\\backend",
          "config": {
            "type": "opt"
          },
          "options": {},
          "logger": {
            "namespace": "s:core:resolver:opt",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "default-aws-credential-resolver": "<REDACTED>",
      "file": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "udagram-cloud-develop-cd12101",
            "build": {
              "esbuild": false
            },
            "plugins": [
              "serverless-webpack",
              "serverless-iam-roles-per-function",
              "serverless-plugin-tracing",
              "serverless-reqvalidator-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs16.x",
              "lambdaHashingVersion": "01092000",
              "stage": "dev",
              "region": "us-east-1",
              "tracing": {
                "lambda": true,
                "apiGateway": true
              },
              "environment": {
                "TODOS_TABLE": "Todos-Final-dev",
                "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                "SIGNED_URL_EXPIRATION": "300"
              },
              "logs": {
                "restApi": true
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "xray:PutTelemetryRecords",
                        "xray:PutTraceSegments",
                        "s3:PutBucketPolicy"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AuthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-Auth"
                    }
                  },
                  "GetTodosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos"
                    }
                  },
                  "CreateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo"
                    }
                  },
                  "UpdateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo"
                    }
                  },
                  "DeleteTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo"
                    }
                  },
                  "GenerateUploadUrlLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTelemetryRecords",
                                  "xray:PutTraceSegments",
                                  "s3:PutBucketPolicy"
                                ],
                                "Resource": "*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords"
                                ],
                                "Resource": [
                                  "*"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/auth/auth0Authorizer.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-Auth",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AuthLogGroup"
                    ]
                  },
                  "GetTodosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/getTodos.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GetTodos",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GetTodosIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetTodosIamRoleLambdaExecution",
                      "GetTodosLogGroup"
                    ]
                  },
                  "CreateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/createTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "CreateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateTodoIamRoleLambdaExecution",
                      "CreateTodoLogGroup"
                    ]
                  },
                  "UpdateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/updateTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "UpdateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoIamRoleLambdaExecution",
                      "UpdateTodoLogGroup"
                    ]
                  },
                  "DeleteTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/deleteTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "DeleteTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteTodoIamRoleLambdaExecution",
                      "DeleteTodoLogGroup"
                    ]
                  },
                  "GenerateUploadUrlLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/generateUploadUrl.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GenerateUploadUrlIamRoleLambdaExecution",
                      "GenerateUploadUrlLogGroup"
                    ]
                  },
                  "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AuthLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetTodosLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GenerateUploadUrlLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-udagram-cloud-develop-cd12101",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTodos": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "todos",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "PathPart": "{todoId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVarAttachment": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "PathPart": "attachment",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetTodosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GenerateUploadUrlLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayUdagramclouddevelopcd12101RequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "udagram-cloud-develop-cd12101-dev | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodTodosPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "description": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "dueDate": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          }
                        },
                        "required": [
                          "name",
                          "dueDate",
                          "description"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "dueDate": {
                            "type": "string"
                          },
                          "status": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "dueDate",
                          "status"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "AuthApiGatewayAuthorizer": {
                    "Type": "AWS::ApiGateway::Authorizer",
                    "Properties": {
                      "IdentitySource": "method.request.header.Authorization",
                      "Name": "Auth",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "AuthorizerUri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "AuthLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "Type": "TOKEN"
                    }
                  },
                  "ApiGatewayDeployment1727214570840": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTodosOptions",
                      "ApiGatewayMethodTodosTodoidVarOptions",
                      "ApiGatewayMethodTodosTodoidVarAttachmentOptions",
                      "ApiGatewayMethodTodosGet",
                      "ApiGatewayMethodTodosPost",
                      "ApiGatewayMethodTodosTodoidVarPatch",
                      "ApiGatewayMethodTodosTodoidVarDelete",
                      "ApiGatewayMethodTodosTodoidVarAttachmentPost"
                    ]
                  },
                  "GetTodosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetTodosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AuthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GenerateUploadUrlLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiGatewayLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/api-gateway/udagram-cloud-develop-cd12101-dev"
                    }
                  },
                  "CustomApiGatewayAccountCloudWatchRole": {
                    "Type": "Custom::ApiGatewayAccountRole",
                    "Version": "1.0",
                    "Properties": {
                      "ServiceToken": "<REDACTED>"
                    }
                  },
                  "IamRoleCustomResourcesLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "dev",
                                "udagram-cloud-develop-cd12101",
                                "custom-resources-lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "iam:",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      "role/*"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "iam:AttachRolePolicy",
                                  "iam:CreateRole",
                                  "iam:ListAttachedRolePolicies",
                                  "iam:PassRole"
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "apigateway:*::/account"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "apigateway:GET",
                                  "apigateway:PATCH"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/custom-resources.zip"
                      },
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role",
                      "Handler": "api-gateway-cloud-watch-role/handler.handler",
                      "MemorySize": 1024,
                      "Runtime": "nodejs20.x",
                      "Timeout": 180,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleCustomResourcesLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "IamRoleCustomResourcesLambdaExecution",
                      "CustomDashresourceDashapigwDashcwDashroleLogGroup"
                    ]
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role"
                    }
                  },
                  "GetTodosIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GetTodos",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "CreateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "CreateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "UpdateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "UpdateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "DeleteTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:DeleteObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "DeleteTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GenerateUploadUrlIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:PutObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GenerateUploadUrl",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GatewayResponseDefault4XX": {
                    "Type": "AWS::ApiGateway::GatewayResponse",
                    "Properties": {
                      "ResponseParameters": {
                        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                        "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                        "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                      },
                      "ResponseType": "DEFAULT_4XX",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "TodosTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "todoId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "createAt",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "todoId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "TableName": "Todos-Final-dev",
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "CreatedAtIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "userId",
                              "KeyType": "HASH"
                            },
                            {
                              "AttributeName": "createAt",
                              "KeyType": "RANGE"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ]
                    }
                  },
                  "AttachmentsBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                      "OwnershipControls": {
                        "Rules": [
                          {
                            "ObjectOwnership": "ObjectWriter"
                          }
                        ]
                      },
                      "PublicAccessBlockConfiguration": {
                        "BlockPublicAcls": false,
                        "BlockPublicPolicy": false,
                        "IgnorePublicAcls": false,
                        "RestrictPublicBuckets": false
                      },
                      "CorsConfiguration": {
                        "CorsRules": [
                          {
                            "AllowedOrigins": [
                              "*"
                            ],
                            "AllowedHeaders": [
                              "*"
                            ],
                            "AllowedMethods": [
                              "GET",
                              "PUT",
                              "POST",
                              "DELETE",
                              "HEAD"
                            ],
                            "MaxAge": 3000
                          }
                        ]
                      }
                    }
                  },
                  "BucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "PolicyDocument": {
                        "Id": "MyPolicy",
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Sid": "PublicReadForGetBucketObjects",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "*",
                            "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                          }
                        ]
                      },
                      "Bucket": {
                        "Ref": "AttachmentsBucket"
                      }
                    }
                  },
                  "RequestBodyValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "Name": "request-body-validator",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": false
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AuthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-AuthLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetTodosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GetTodosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-CreateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-UpdateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-DeleteTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "GenerateUploadUrlLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "documentation": {
                "api": {
                  "info": {
                    "version": "v1.0.0",
                    "title": "Udacity Serverless TODO items",
                    "description": "Serverless TODO items managant tool"
                  }
                },
                "models": [
                  {
                    "name": "CreateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "description": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "dueDate": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        }
                      },
                      "required": [
                        "name",
                        "dueDate",
                        "description"
                      ],
                      "additionalProperties": false
                    }
                  },
                  {
                    "name": "UpdateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "dueDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "dueDate",
                        "status"
                      ],
                      "additionalProperties": false
                    }
                  }
                ]
              }
            },
            "functions": {
              "Auth": {
                "handler": "src/lambda/auth/auth0Authorizer.handler",
                "events": [],
                "name": "udagram-cloud-develop-cd12101-dev-Auth",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
              },
              "GetTodos": {
                "handler": "src/lambda/http/getTodos.handler",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GetTodos",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
              },
              "CreateTodo": {
                "handler": "src/lambda/http/createTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "description": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "dueDate": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              }
                            },
                            "required": [
                              "name",
                              "dueDate",
                              "description"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:PutItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
              },
              "UpdateTodo": {
                "handler": "src/lambda/http/updateTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "patch",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "dueDate": {
                                "type": "string"
                              },
                              "status": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "dueDate",
                              "status"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
              },
              "DeleteTodo": {
                "handler": "src/lambda/http/deleteTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "delete",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:DeleteItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:DeleteObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
              },
              "GenerateUploadUrl": {
                "handler": "src/lambda/http/generateUploadUrl.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos/{todoId}/attachment",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
              }
            },
            "resources": {
              "Resources": {
                "GatewayResponseDefault4XX": {
                  "Type": "AWS::ApiGateway::GatewayResponse",
                  "Properties": {
                    "ResponseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                      "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                      "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                    },
                    "ResponseType": "DEFAULT_4XX",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    }
                  }
                },
                "TodosTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "todoId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "createAt",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "todoId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "TableName": "Todos-Final-dev",
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "CreatedAtIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          },
                          {
                            "AttributeName": "createAt",
                            "KeyType": "RANGE"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ]
                  }
                },
                "AttachmentsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                    "OwnershipControls": {
                      "Rules": [
                        {
                          "ObjectOwnership": "ObjectWriter"
                        }
                      ]
                    },
                    "PublicAccessBlockConfiguration": {
                      "BlockPublicAcls": false,
                      "BlockPublicPolicy": false,
                      "IgnorePublicAcls": false,
                      "RestrictPublicBuckets": false
                    },
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedOrigins": [
                            "*"
                          ],
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                },
                "BucketPolicy": {
                  "Type": "AWS::S3::BucketPolicy",
                  "Properties": {
                    "PolicyDocument": {
                      "Id": "MyPolicy",
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Sid": "PublicReadForGetBucketObjects",
                          "Effect": "Allow",
                          "Principal": "*",
                          "Action": "*",
                          "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                        }
                      ]
                    },
                    "Bucket": {
                      "Ref": "AttachmentsBucket"
                    }
                  }
                },
                "RequestBodyValidator": {
                  "Type": "AWS::ApiGateway::RequestValidator",
                  "Properties": {
                    "Name": "request-body-validator",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "ValidateRequestBody": true,
                    "ValidateRequestParameters": false
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "D:\\Careerpath\\cloud\\aws\\clouddeveloperudacity\\deployserlvess\\udagram-cloud-develop-cd12101\\backend",
          "config": {
            "type": "file"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:file",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "self": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "udagram-cloud-develop-cd12101",
            "build": {
              "esbuild": false
            },
            "plugins": [
              "serverless-webpack",
              "serverless-iam-roles-per-function",
              "serverless-plugin-tracing",
              "serverless-reqvalidator-plugin"
            ],
            "provider": {
              "name": "aws",
              "runtime": "nodejs16.x",
              "lambdaHashingVersion": "01092000",
              "stage": "dev",
              "region": "us-east-1",
              "tracing": {
                "lambda": true,
                "apiGateway": true
              },
              "environment": {
                "TODOS_TABLE": "Todos-Final-dev",
                "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                "SIGNED_URL_EXPIRATION": "300"
              },
              "logs": {
                "restApi": true
              },
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "xray:PutTelemetryRecords",
                        "xray:PutTraceSegments",
                        "s3:PutBucketPolicy"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              },
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "AuthLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-Auth"
                    }
                  },
                  "GetTodosLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos"
                    }
                  },
                  "CreateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo"
                    }
                  },
                  "UpdateTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo"
                    }
                  },
                  "DeleteTodoLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo"
                    }
                  },
                  "GenerateUploadUrlLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTelemetryRecords",
                                  "xray:PutTraceSegments",
                                  "s3:PutBucketPolicy"
                                ],
                                "Resource": "*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords"
                                ],
                                "Resource": [
                                  "*"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/auth/auth0Authorizer.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-Auth",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "AuthLogGroup"
                    ]
                  },
                  "GetTodosLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/getTodos.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GetTodos",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GetTodosIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetTodosIamRoleLambdaExecution",
                      "GetTodosLogGroup"
                    ]
                  },
                  "CreateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/createTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "CreateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateTodoIamRoleLambdaExecution",
                      "CreateTodoLogGroup"
                    ]
                  },
                  "UpdateTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/updateTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "UpdateTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoIamRoleLambdaExecution",
                      "UpdateTodoLogGroup"
                    ]
                  },
                  "DeleteTodoLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/deleteTodo.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "DeleteTodoIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteTodoIamRoleLambdaExecution",
                      "DeleteTodoLogGroup"
                    ]
                  },
                  "GenerateUploadUrlLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                      },
                      "Handler": "src/lambda/http/generateUploadUrl.handler",
                      "Runtime": "nodejs16.x",
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "TracingConfig": {
                        "Mode": "PassThrough"
                      },
                      "Environment": {
                        "Variables": {
                          "TODOS_TABLE": "Todos-Final-dev",
                          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                          "SIGNED_URL_EXPIRATION": "300"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlIamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GenerateUploadUrlIamRoleLambdaExecution",
                      "GenerateUploadUrlLogGroup"
                    ]
                  },
                  "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "AuthLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetTodosLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteTodoLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GenerateUploadUrlLambdaFunction"
                      },
                      "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-udagram-cloud-develop-cd12101",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceTodos": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "todos",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "PathPart": "{todoId}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceTodosTodoidVarAttachment": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "PathPart": "attachment",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentOptions": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "AuthorizationType": "NONE",
                      "HttpMethod": "OPTIONS",
                      "MethodResponses": [
                        {
                          "StatusCode": "200",
                          "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": true,
                            "method.response.header.Access-Control-Allow-Headers": true,
                            "method.response.header.Access-Control-Allow-Methods": true
                          },
                          "ResponseModels": {}
                        }
                      ],
                      "RequestParameters": {},
                      "Integration": {
                        "Type": "MOCK",
                        "RequestTemplates": {
                          "application/json": "{statusCode:200}"
                        },
                        "ContentHandling": "CONVERT_TO_TEXT",
                        "IntegrationResponses": [
                          {
                            "StatusCode": "200",
                            "ResponseParameters": {
                              "method.response.header.Access-Control-Allow-Origin": "'*'",
                              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                            },
                            "ResponseTemplates": {
                              "application/json": ""
                            }
                          }
                        ]
                      },
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodTodosGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetTodosLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodos"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosPostApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarPatch": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PATCH",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": [],
                      "RequestValidatorId": {
                        "Ref": "RequestBodyValidator"
                      },
                      "RequestModels": {
                        "application/json": {
                          "Ref": "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel"
                        }
                      }
                    },
                    "DependsOn": [
                      "UpdateTodoLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteTodoLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayMethodTodosTodoidVarAttachmentPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "CUSTOM",
                      "AuthorizerId": {
                        "Ref": "AuthApiGatewayAuthorizer"
                      },
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GenerateUploadUrlLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "AuthApiGatewayAuthorizer"
                    ]
                  },
                  "ApiGatewayUdagramclouddevelopcd12101RequestValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": true,
                      "Name": "udagram-cloud-develop-cd12101-dev | Validate request body and querystring parameters"
                    }
                  },
                  "ApiGatewayMethodTodosPostApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "description": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          },
                          "dueDate": {
                            "type": "string",
                            "pattern": "^(?!\\s*$).+"
                          }
                        },
                        "required": [
                          "name",
                          "dueDate",
                          "description"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel": {
                    "Type": "AWS::ApiGateway::Model",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ContentType": "application/json",
                      "Schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "group",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "dueDate": {
                            "type": "string"
                          },
                          "status": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "dueDate",
                          "status"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "AuthApiGatewayAuthorizer": {
                    "Type": "AWS::ApiGateway::Authorizer",
                    "Properties": {
                      "IdentitySource": "method.request.header.Authorization",
                      "Name": "Auth",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "AuthorizerUri": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":apigateway:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":lambda:path/2015-03-31/functions/",
                            {
                              "Fn::GetAtt": [
                                "AuthLambdaFunction",
                                "Arn"
                              ]
                            },
                            "/invocations"
                          ]
                        ]
                      },
                      "Type": "TOKEN"
                    }
                  },
                  "ApiGatewayDeployment1727214570840": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodTodosOptions",
                      "ApiGatewayMethodTodosTodoidVarOptions",
                      "ApiGatewayMethodTodosTodoidVarAttachmentOptions",
                      "ApiGatewayMethodTodosGet",
                      "ApiGatewayMethodTodosPost",
                      "ApiGatewayMethodTodosTodoidVarPatch",
                      "ApiGatewayMethodTodosTodoidVarDelete",
                      "ApiGatewayMethodTodosTodoidVarAttachmentPost"
                    ]
                  },
                  "GetTodosLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetTodosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "AuthLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "AuthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteTodoLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GenerateUploadUrlLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiGatewayLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/api-gateway/udagram-cloud-develop-cd12101-dev"
                    }
                  },
                  "CustomApiGatewayAccountCloudWatchRole": {
                    "Type": "Custom::ApiGatewayAccountRole",
                    "Version": "1.0",
                    "Properties": {
                      "ServiceToken": "<REDACTED>"
                    }
                  },
                  "IamRoleCustomResourcesLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "dev",
                                "udagram-cloud-develop-cd12101",
                                "custom-resources-lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "iam:",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      "role/*"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "iam:AttachRolePolicy",
                                  "iam:CreateRole",
                                  "iam:ListAttachedRolePolicies",
                                  "iam:PassRole"
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Resource": {
                                  "Fn::Join": [
                                    ":",
                                    [
                                      "arn",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      "apigateway:*::/account"
                                    ]
                                  ]
                                },
                                "Action": [
                                  "apigateway:GET",
                                  "apigateway:PATCH"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                        "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/custom-resources.zip"
                      },
                      "FunctionName": "udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role",
                      "Handler": "api-gateway-cloud-watch-role/handler.handler",
                      "MemorySize": 1024,
                      "Runtime": "nodejs20.x",
                      "Timeout": 180,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleCustomResourcesLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "IamRoleCustomResourcesLambdaExecution",
                      "CustomDashresourceDashapigwDashcwDashroleLogGroup"
                    ]
                  },
                  "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role"
                    }
                  },
                  "GetTodosIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:Query"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GetTodos",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "CreateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:PutItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "CreateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "UpdateTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "UpdateTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "DeleteTodoIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:DeleteItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:DeleteObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "DeleteTodo",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GenerateUploadUrlIamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "udagram-cloud-develop-cd12101",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "s3:PutObject"
                                ],
                                "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "dynamodb:UpdateItem"
                                ],
                                "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "udagram-cloud-develop-cd12101",
                            "dev",
                            "GenerateUploadUrl",
                            {
                              "Ref": "AWS::Region"
                            }
                          ]
                        ]
                      },
                      "ManagedPolicyArns": []
                    }
                  },
                  "GatewayResponseDefault4XX": {
                    "Type": "AWS::ApiGateway::GatewayResponse",
                    "Properties": {
                      "ResponseParameters": {
                        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                        "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                        "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                      },
                      "ResponseType": "DEFAULT_4XX",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "TodosTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "userId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "todoId",
                          "AttributeType": "S"
                        },
                        {
                          "AttributeName": "createAt",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "userId",
                          "KeyType": "HASH"
                        },
                        {
                          "AttributeName": "todoId",
                          "KeyType": "RANGE"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST",
                      "TableName": "Todos-Final-dev",
                      "GlobalSecondaryIndexes": [
                        {
                          "IndexName": "CreatedAtIndex",
                          "KeySchema": [
                            {
                              "AttributeName": "userId",
                              "KeyType": "HASH"
                            },
                            {
                              "AttributeName": "createAt",
                              "KeyType": "RANGE"
                            }
                          ],
                          "Projection": {
                            "ProjectionType": "ALL"
                          }
                        }
                      ]
                    }
                  },
                  "AttachmentsBucket": {
                    "Type": "AWS::S3::Bucket",
                    "Properties": {
                      "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                      "OwnershipControls": {
                        "Rules": [
                          {
                            "ObjectOwnership": "ObjectWriter"
                          }
                        ]
                      },
                      "PublicAccessBlockConfiguration": {
                        "BlockPublicAcls": false,
                        "BlockPublicPolicy": false,
                        "IgnorePublicAcls": false,
                        "RestrictPublicBuckets": false
                      },
                      "CorsConfiguration": {
                        "CorsRules": [
                          {
                            "AllowedOrigins": [
                              "*"
                            ],
                            "AllowedHeaders": [
                              "*"
                            ],
                            "AllowedMethods": [
                              "GET",
                              "PUT",
                              "POST",
                              "DELETE",
                              "HEAD"
                            ],
                            "MaxAge": 3000
                          }
                        ]
                      }
                    }
                  },
                  "BucketPolicy": {
                    "Type": "AWS::S3::BucketPolicy",
                    "Properties": {
                      "PolicyDocument": {
                        "Id": "MyPolicy",
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Sid": "PublicReadForGetBucketObjects",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "*",
                            "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                          }
                        ]
                      },
                      "Bucket": {
                        "Ref": "AttachmentsBucket"
                      }
                    }
                  },
                  "RequestBodyValidator": {
                    "Type": "AWS::ApiGateway::RequestValidator",
                    "Properties": {
                      "Name": "request-body-validator",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ValidateRequestBody": true,
                      "ValidateRequestParameters": false
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "AuthLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-AuthLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetTodosLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GetTodosLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-CreateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-UpdateTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteTodoLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-DeleteTodoLambdaFunctionQualifiedArn"
                    }
                  },
                  "GenerateUploadUrlLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-udagram-cloud-develop-cd12101-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "custom": {
              "documentation": {
                "api": {
                  "info": {
                    "version": "v1.0.0",
                    "title": "Udacity Serverless TODO items",
                    "description": "Serverless TODO items managant tool"
                  }
                },
                "models": [
                  {
                    "name": "CreateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "description": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "dueDate": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        }
                      },
                      "required": [
                        "name",
                        "dueDate",
                        "description"
                      ],
                      "additionalProperties": false
                    }
                  },
                  {
                    "name": "UpdateTodoRequest",
                    "contentType": "application/json",
                    "schema": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "dueDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "dueDate",
                        "status"
                      ],
                      "additionalProperties": false
                    }
                  }
                ]
              }
            },
            "functions": {
              "Auth": {
                "handler": "src/lambda/auth/auth0Authorizer.handler",
                "events": [],
                "name": "udagram-cloud-develop-cd12101-dev-Auth",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
              },
              "GetTodos": {
                "handler": "src/lambda/http/getTodos.handler",
                "events": [
                  {
                    "http": {
                      "method": "get",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "GET"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:Query"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GetTodos",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
              },
              "CreateTodo": {
                "handler": "src/lambda/http/createTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "description": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              },
                              "dueDate": {
                                "type": "string",
                                "pattern": "^(?!\\s*$).+"
                              }
                            },
                            "required": [
                              "name",
                              "dueDate",
                              "description"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:PutItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
              },
              "UpdateTodo": {
                "handler": "src/lambda/http/updateTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "patch",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "PATCH"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "request": {
                        "schemas": {
                          "application/json": {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "group",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "dueDate": {
                                "type": "string"
                              },
                              "status": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "description",
                              "dueDate",
                              "status"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "reqValidatorName": "RequestBodyValidator",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
              },
              "DeleteTodo": {
                "handler": "src/lambda/http/deleteTodo.handler",
                "events": [
                  {
                    "http": {
                      "method": "delete",
                      "path": "todos/{todoId}",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "DELETE"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:DeleteItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:DeleteObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
              },
              "GenerateUploadUrl": {
                "handler": "src/lambda/http/generateUploadUrl.handler",
                "events": [
                  {
                    "http": {
                      "method": "post",
                      "path": "todos/{todoId}/attachment",
                      "cors": {
                        "origin": "*",
                        "methods": [
                          "OPTIONS",
                          "POST"
                        ],
                        "headers": [
                          "Content-Type",
                          "X-Amz-Date",
                          "Authorization",
                          "X-Api-Key",
                          "X-Amz-Security-Token",
                          "X-Amz-User-Agent",
                          "X-Amzn-Trace-Id"
                        ],
                        "allowCredentials": "<REDACTED>"
                      },
                      "authorizer": {
                        "name": "Auth",
                        "arn": {
                          "Fn::GetAtt": [
                            "AuthLambdaFunction",
                            "Arn"
                          ]
                        },
                        "managedExternally": false,
                        "identitySource": "method.request.header.Authorization"
                      },
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "iamRoleStatements": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "s3:PutObject"
                    ],
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                  }
                ],
                "name": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                "package": {
                  "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
                },
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs16.x",
                "vpc": {},
                "versionLogicalId": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
              }
            },
            "resources": {
              "Resources": {
                "GatewayResponseDefault4XX": {
                  "Type": "AWS::ApiGateway::GatewayResponse",
                  "Properties": {
                    "ResponseParameters": {
                      "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                      "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                      "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                    },
                    "ResponseType": "DEFAULT_4XX",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    }
                  }
                },
                "TodosTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "userId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "todoId",
                        "AttributeType": "S"
                      },
                      {
                        "AttributeName": "createAt",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "todoId",
                        "KeyType": "RANGE"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST",
                    "TableName": "Todos-Final-dev",
                    "GlobalSecondaryIndexes": [
                      {
                        "IndexName": "CreatedAtIndex",
                        "KeySchema": [
                          {
                            "AttributeName": "userId",
                            "KeyType": "HASH"
                          },
                          {
                            "AttributeName": "createAt",
                            "KeyType": "RANGE"
                          }
                        ],
                        "Projection": {
                          "ProjectionType": "ALL"
                        }
                      }
                    ]
                  }
                },
                "AttachmentsBucket": {
                  "Type": "AWS::S3::Bucket",
                  "Properties": {
                    "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                    "OwnershipControls": {
                      "Rules": [
                        {
                          "ObjectOwnership": "ObjectWriter"
                        }
                      ]
                    },
                    "PublicAccessBlockConfiguration": {
                      "BlockPublicAcls": false,
                      "BlockPublicPolicy": false,
                      "IgnorePublicAcls": false,
                      "RestrictPublicBuckets": false
                    },
                    "CorsConfiguration": {
                      "CorsRules": [
                        {
                          "AllowedOrigins": [
                            "*"
                          ],
                          "AllowedHeaders": [
                            "*"
                          ],
                          "AllowedMethods": [
                            "GET",
                            "PUT",
                            "POST",
                            "DELETE",
                            "HEAD"
                          ],
                          "MaxAge": 3000
                        }
                      ]
                    }
                  }
                },
                "BucketPolicy": {
                  "Type": "AWS::S3::BucketPolicy",
                  "Properties": {
                    "PolicyDocument": {
                      "Id": "MyPolicy",
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Sid": "PublicReadForGetBucketObjects",
                          "Effect": "Allow",
                          "Principal": "*",
                          "Action": "*",
                          "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                        }
                      ]
                    },
                    "Bucket": {
                      "Ref": "AttachmentsBucket"
                    }
                  }
                },
                "RequestBodyValidator": {
                  "Type": "AWS::ApiGateway::RequestValidator",
                  "Properties": {
                    "Name": "request-body-validator",
                    "RestApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "ValidateRequestBody": true,
                    "ValidateRequestParameters": false
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "D:\\Careerpath\\cloud\\aws\\clouddeveloperudacity\\deployserlvess\\udagram-cloud-develop-cd12101\\backend",
          "config": {
            "type": "self"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:self",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\Careerpath\\cloud\\aws\\clouddeveloperudacity\\deployserlvess\\udagram-cloud-develop-cd12101\\backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "udagram-cloud-develop-cd12101",
      "build": {
        "esbuild": false
      },
      "plugins": [
        "serverless-webpack",
        "serverless-iam-roles-per-function",
        "serverless-plugin-tracing",
        "serverless-reqvalidator-plugin"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs16.x",
        "lambdaHashingVersion": "01092000",
        "stage": "dev",
        "region": "us-east-1",
        "tracing": {
          "lambda": true,
          "apiGateway": true
        },
        "environment": {
          "TODOS_TABLE": "Todos-Final-dev",
          "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
          "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
          "SIGNED_URL_EXPIRATION": "300"
        },
        "logs": {
          "restApi": true
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "xray:PutTelemetryRecords",
                  "xray:PutTraceSegments",
                  "s3:PutBucketPolicy"
                ],
                "Resource": "*"
              }
            ]
          }
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AuthLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-Auth"
              }
            },
            "GetTodosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos"
              }
            },
            "CreateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo"
              }
            },
            "UpdateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo"
              }
            },
            "DeleteTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo"
              }
            },
            "GenerateUploadUrlLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "xray:PutTelemetryRecords",
                            "xray:PutTraceSegments",
                            "s3:PutBucketPolicy"
                          ],
                          "Resource": "*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords"
                          ],
                          "Resource": [
                            "*"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "AuthLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/auth/auth0Authorizer.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-Auth",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AuthLogGroup"
              ]
            },
            "GetTodosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/http/getTodos.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-GetTodos",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "GetTodosIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTodosIamRoleLambdaExecution",
                "GetTodosLogGroup"
              ]
            },
            "CreateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/http/createTodo.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-CreateTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "CreateTodoIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateTodoIamRoleLambdaExecution",
                "CreateTodoLogGroup"
              ]
            },
            "UpdateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/http/updateTodo.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "UpdateTodoIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateTodoIamRoleLambdaExecution",
                "UpdateTodoLogGroup"
              ]
            },
            "DeleteTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/http/deleteTodo.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "DeleteTodoIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteTodoIamRoleLambdaExecution",
                "DeleteTodoLogGroup"
              ]
            },
            "GenerateUploadUrlLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/udagram-cloud-develop-cd12101.zip"
                },
                "Handler": "src/lambda/http/generateUploadUrl.handler",
                "Runtime": "nodejs16.x",
                "FunctionName": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
                "MemorySize": 1024,
                "Timeout": 6,
                "TracingConfig": {
                  "Mode": "PassThrough"
                },
                "Environment": {
                  "Variables": {
                    "TODOS_TABLE": "Todos-Final-dev",
                    "TODOS_CREATED_AT_INDEX": "CreatedAtIndex",
                    "ATTACHMENT_S3_BUCKET": "udagram-cloud-develop-cd12101-images-dev",
                    "SIGNED_URL_EXPIRATION": "300"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "GenerateUploadUrlIamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GenerateUploadUrlIamRoleLambdaExecution",
                "GenerateUploadUrlLogGroup"
              ]
            },
            "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AuthLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTodosLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateTodoLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateTodoLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteTodoLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GenerateUploadUrlLambdaFunction"
                },
                "CodeSha256": "c2A0hDs3p05LoSKutUftF8LeZRT7kl1ptRmAJtkH3Tk="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-udagram-cloud-develop-cd12101",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTodos": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "todos",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTodosTodoidVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "PathPart": "{todoId}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTodosTodoidVarAttachment": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVar"
                },
                "PathPart": "attachment",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosTodoidVarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosTodoidVarAttachmentOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "CUSTOM",
                "AuthorizerId": {
                  "Ref": "AuthApiGatewayAuthorizer"
                },
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTodosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiGatewayAuthorizer"
              ]
            },
            "ApiGatewayMethodTodosPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "CUSTOM",
                "AuthorizerId": {
                  "Ref": "AuthApiGatewayAuthorizer"
                },
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "RequestBodyValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodTodosPostApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "AuthApiGatewayAuthorizer"
              ]
            },
            "ApiGatewayMethodTodosTodoidVarPatch": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PATCH",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": [],
                "RequestValidatorId": {
                  "Ref": "RequestBodyValidator"
                },
                "RequestModels": {
                  "application/json": {
                    "Ref": "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel"
                  }
                }
              },
              "DependsOn": [
                "UpdateTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosTodoidVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "CUSTOM",
                "AuthorizerId": {
                  "Ref": "AuthApiGatewayAuthorizer"
                },
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiGatewayAuthorizer"
              ]
            },
            "ApiGatewayMethodTodosTodoidVarAttachmentPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosTodoidVarAttachment"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "CUSTOM",
                "AuthorizerId": {
                  "Ref": "AuthApiGatewayAuthorizer"
                },
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GenerateUploadUrlLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "AuthApiGatewayAuthorizer"
              ]
            },
            "ApiGatewayUdagramclouddevelopcd12101RequestValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true,
                "Name": "udagram-cloud-develop-cd12101-dev | Validate request body and querystring parameters"
              }
            },
            "ApiGatewayMethodTodosPostApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "group",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^(?!\\s*$).+"
                    },
                    "description": {
                      "type": "string",
                      "pattern": "^(?!\\s*$).+"
                    },
                    "dueDate": {
                      "type": "string",
                      "pattern": "^(?!\\s*$).+"
                    }
                  },
                  "required": [
                    "name",
                    "dueDate",
                    "description"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "ApiGatewayMethodTodosTodoidVarPatchApplicationJsonModel": {
              "Type": "AWS::ApiGateway::Model",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ContentType": "application/json",
                "Schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "group",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "dueDate": {
                      "type": "string"
                    },
                    "status": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "name",
                    "description",
                    "dueDate",
                    "status"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "AuthApiGatewayAuthorizer": {
              "Type": "AWS::ApiGateway::Authorizer",
              "Properties": {
                "IdentitySource": "method.request.header.Authorization",
                "Name": "Auth",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "AuthorizerUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AuthLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                },
                "Type": "TOKEN"
              }
            },
            "ApiGatewayDeployment1727214570840": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTodosOptions",
                "ApiGatewayMethodTodosTodoidVarOptions",
                "ApiGatewayMethodTodosTodoidVarAttachmentOptions",
                "ApiGatewayMethodTodosGet",
                "ApiGatewayMethodTodosPost",
                "ApiGatewayMethodTodosTodoidVarPatch",
                "ApiGatewayMethodTodosTodoidVarDelete",
                "ApiGatewayMethodTodosTodoidVarAttachmentPost"
              ]
            },
            "GetTodosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTodosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "AuthLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "AuthLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GenerateUploadUrlLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GenerateUploadUrlLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ApiGatewayLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/api-gateway/udagram-cloud-develop-cd12101-dev"
              }
            },
            "CustomApiGatewayAccountCloudWatchRole": {
              "Type": "Custom::ApiGatewayAccountRole",
              "Version": "1.0",
              "Properties": {
                "ServiceToken": "<REDACTED>"
              }
            },
            "IamRoleCustomResourcesLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "dev",
                          "udagram-cloud-develop-cd12101",
                          "custom-resources-lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "iam:",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                "role/*"
                              ]
                            ]
                          },
                          "Action": [
                            "iam:AttachRolePolicy",
                            "iam:CreateRole",
                            "iam:ListAttachedRolePolicies",
                            "iam:PassRole"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "apigateway:*::/account"
                              ]
                            ]
                          },
                          "Action": [
                            "apigateway:GET",
                            "apigateway:PATCH"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
                  "S3Key": "serverless/udagram-cloud-develop-cd12101/dev/1727214648908-2024-09-24T21:50:48.908Z/custom-resources.zip"
                },
                "FunctionName": "udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role",
                "Handler": "api-gateway-cloud-watch-role/handler.handler",
                "MemorySize": 1024,
                "Runtime": "nodejs20.x",
                "Timeout": 180,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleCustomResourcesLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "IamRoleCustomResourcesLambdaExecution",
                "CustomDashresourceDashapigwDashcwDashroleLogGroup"
              ]
            },
            "CustomDashresourceDashapigwDashcwDashroleLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/udagram-cloud-develop-cd12101-dev-custom-resource-apigw-cw-role"
              }
            },
            "GetTodosIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GetTodos:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:Query"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      "GetTodos",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": []
              }
            },
            "CreateTodoIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-CreateTodo:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      "CreateTodo",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "ManagedPolicyArns": []
              }
            },
            "UpdateTodoIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-UpdateTodo:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:UpdateItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      "UpdateTodo",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "ManagedPolicyArns": []
              }
            },
            "DeleteTodoIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-DeleteTodo:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:DeleteItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:DeleteObject"
                          ],
                          "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      "DeleteTodo",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "ManagedPolicyArns": []
              }
            },
            "GenerateUploadUrlIamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "udagram-cloud-develop-cd12101",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/udagram-cloud-develop-cd12101-dev-GenerateUploadUrl:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject"
                          ],
                          "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:UpdateItem"
                          ],
                          "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "udagram-cloud-develop-cd12101",
                      "dev",
                      "GenerateUploadUrl",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "ManagedPolicyArns": []
              }
            },
            "GatewayResponseDefault4XX": {
              "Type": "AWS::ApiGateway::GatewayResponse",
              "Properties": {
                "ResponseParameters": {
                  "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                  "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
                },
                "ResponseType": "DEFAULT_4XX",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "TodosTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "AttributeDefinitions": [
                  {
                    "AttributeName": "userId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "todoId",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "createAt",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "todoId",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "TableName": "Todos-Final-dev",
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "CreatedAtIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                      },
                      {
                        "AttributeName": "createAt",
                        "KeyType": "RANGE"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            },
            "AttachmentsBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "udagram-cloud-develop-cd12101-images-dev",
                "OwnershipControls": {
                  "Rules": [
                    {
                      "ObjectOwnership": "ObjectWriter"
                    }
                  ]
                },
                "PublicAccessBlockConfiguration": {
                  "BlockPublicAcls": false,
                  "BlockPublicPolicy": false,
                  "IgnorePublicAcls": false,
                  "RestrictPublicBuckets": false
                },
                "CorsConfiguration": {
                  "CorsRules": [
                    {
                      "AllowedOrigins": [
                        "*"
                      ],
                      "AllowedHeaders": [
                        "*"
                      ],
                      "AllowedMethods": [
                        "GET",
                        "PUT",
                        "POST",
                        "DELETE",
                        "HEAD"
                      ],
                      "MaxAge": 3000
                    }
                  ]
                }
              }
            },
            "BucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "PolicyDocument": {
                  "Id": "MyPolicy",
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Sid": "PublicReadForGetBucketObjects",
                      "Effect": "Allow",
                      "Principal": "*",
                      "Action": "*",
                      "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                    }
                  ]
                },
                "Bucket": {
                  "Ref": "AttachmentsBucket"
                }
              }
            },
            "RequestBodyValidator": {
              "Type": "AWS::ApiGateway::RequestValidator",
              "Properties": {
                "Name": "request-body-validator",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": false
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-ServerlessDeploymentBucketName"
              }
            },
            "AuthLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-AuthLambdaFunctionQualifiedArn"
              }
            },
            "GetTodosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-GetTodosLambdaFunctionQualifiedArn"
              }
            },
            "CreateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-CreateTodoLambdaFunctionQualifiedArn"
              }
            },
            "UpdateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-UpdateTodoLambdaFunctionQualifiedArn"
              }
            },
            "DeleteTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-DeleteTodoLambdaFunctionQualifiedArn"
              }
            },
            "GenerateUploadUrlLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-udagram-cloud-develop-cd12101-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "custom": {
        "documentation": {
          "api": {
            "info": {
              "version": "v1.0.0",
              "title": "Udacity Serverless TODO items",
              "description": "Serverless TODO items managant tool"
            }
          },
          "models": [
            {
              "name": "CreateTodoRequest",
              "contentType": "application/json",
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                  },
                  "description": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                  },
                  "dueDate": {
                    "type": "string",
                    "pattern": "^(?!\\s*$).+"
                  }
                },
                "required": [
                  "name",
                  "dueDate",
                  "description"
                ],
                "additionalProperties": false
              }
            },
            {
              "name": "UpdateTodoRequest",
              "contentType": "application/json",
              "schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "group",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "dueDate": {
                    "type": "string"
                  },
                  "status": {
                    "type": "number"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "dueDate",
                  "status"
                ],
                "additionalProperties": false
              }
            }
          ]
        }
      },
      "functions": {
        "Auth": {
          "handler": "src/lambda/auth/auth0Authorizer.handler",
          "events": [],
          "name": "udagram-cloud-develop-cd12101-dev-Auth",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "AuthLambdaVersionnZYQpu5tsvuRbNtDHug9zmiJx09crBGfCnzJS9IfmQ"
        },
        "GetTodos": {
          "handler": "src/lambda/http/getTodos.handler",
          "events": [
            {
              "http": {
                "method": "get",
                "path": "todos",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "Auth",
                  "arn": {
                    "Fn::GetAtt": [
                      "AuthLambdaFunction",
                      "Arn"
                    ]
                  },
                  "managedExternally": false,
                  "identitySource": "method.request.header.Authorization"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev/index/CreatedAtIndex"
            }
          ],
          "name": "udagram-cloud-develop-cd12101-dev-GetTodos",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "GetTodosLambdaVersion589qHZBwc6h1jqPk1p937fJIyfd1oX5ge3zUxxwaGMc"
        },
        "CreateTodo": {
          "handler": "src/lambda/http/createTodo.handler",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "todos",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "Auth",
                  "arn": {
                    "Fn::GetAtt": [
                      "AuthLambdaFunction",
                      "Arn"
                    ]
                  },
                  "managedExternally": false,
                  "identitySource": "method.request.header.Authorization"
                },
                "request": {
                  "schemas": {
                    "application/json": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "description": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        },
                        "dueDate": {
                          "type": "string",
                          "pattern": "^(?!\\s*$).+"
                        }
                      },
                      "required": [
                        "name",
                        "dueDate",
                        "description"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "reqValidatorName": "RequestBodyValidator",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
            }
          ],
          "name": "udagram-cloud-develop-cd12101-dev-CreateTodo",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "CreateTodoLambdaVersionhXHsTD0dOIBGFvIKw7JC9BOZGPYqIHhNjIWIy6ziIyw"
        },
        "UpdateTodo": {
          "handler": "src/lambda/http/updateTodo.handler",
          "events": [
            {
              "http": {
                "method": "patch",
                "path": "todos/{todoId}",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "PATCH"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "request": {
                  "schemas": {
                    "application/json": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "group",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "dueDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "dueDate",
                        "status"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                "reqValidatorName": "RequestBodyValidator",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:UpdateItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
            }
          ],
          "name": "udagram-cloud-develop-cd12101-dev-UpdateTodo",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "UpdateTodoLambdaVersion9XHYbJcTOR41hLpCTqGKRplJ15iOiiloQyNnRG0nUCo"
        },
        "DeleteTodo": {
          "handler": "src/lambda/http/deleteTodo.handler",
          "events": [
            {
              "http": {
                "method": "delete",
                "path": "todos/{todoId}",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "DELETE"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "Auth",
                  "arn": {
                    "Fn::GetAtt": [
                      "AuthLambdaFunction",
                      "Arn"
                    ]
                  },
                  "managedExternally": false,
                  "identitySource": "method.request.header.Authorization"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:DeleteObject"
              ],
              "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
            }
          ],
          "name": "udagram-cloud-develop-cd12101-dev-DeleteTodo",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "DeleteTodoLambdaVersionwSvFYNzGUNCdhWgodkSMcl0jDrqqseOWrJ3sh3Ic"
        },
        "GenerateUploadUrl": {
          "handler": "src/lambda/http/generateUploadUrl.handler",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "todos/{todoId}/attachment",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "Auth",
                  "arn": {
                    "Fn::GetAtt": [
                      "AuthLambdaFunction",
                      "Arn"
                    ]
                  },
                  "managedExternally": false,
                  "identitySource": "method.request.header.Authorization"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "iamRoleStatements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:UpdateItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/Todos-Final-dev"
            }
          ],
          "name": "udagram-cloud-develop-cd12101-dev-GenerateUploadUrl",
          "package": {
            "artifact": ".serverless\\udagram-cloud-develop-cd12101.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "GenerateUploadUrlLambdaVersionRsVQIKzxUAgOR28xXBZ2Q3fTFkzYvxelG97Euwso"
        }
      },
      "resources": {
        "Resources": {
          "GatewayResponseDefault4XX": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "TodosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "todoId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "todoId",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Todos-Final-dev",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "CreatedAtIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "AttachmentsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "udagram-cloud-develop-cd12101-images-dev",
              "OwnershipControls": {
                "Rules": [
                  {
                    "ObjectOwnership": "ObjectWriter"
                  }
                ]
              },
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": false,
                "BlockPublicPolicy": false,
                "IgnorePublicAcls": false,
                "RestrictPublicBuckets": false
              },
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "MyPolicy",
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "*",
                    "Resource": "arn:aws:s3:::udagram-cloud-develop-cd12101-images-dev/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "AttachmentsBucket"
              }
            }
          },
          "RequestBodyValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "Name": "request-body-validator",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": false
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "# TODO: Change the name of the org \r\n# org: cd12101\r\n# app: udagram-cloud-develop-cd12101\r\n# console: true\r\nservice: udagram-cloud-develop-cd12101\r\n\r\nbuild:\r\n  esbuild: false\r\n\r\nplugins:\r\n    - serverless-webpack\r\n    - serverless-iam-roles-per-function\r\n    - serverless-plugin-tracing\r\n    - serverless-reqvalidator-plugin\r\n\r\nprovider:\r\n    name: aws\r\n    runtime: nodejs16.x\r\n    lambdaHashingVersion: '01092000'\r\n\r\n    stage: ${opt:stage, 'dev'}\r\n    region: ${opt:region, 'us-east-1'}\r\n\r\n    tracing:\r\n        lambda: true\r\n        apiGateway: true\r\n\r\n    # Use these variables in the functions and resources section below. For example,\r\n    # ${self:provider.environment.ATTACHMENT_S3_BUCKET}\r\n    environment:\r\n        TODOS_TABLE: Todos-Final-${self:provider.stage}\r\n        TODOS_CREATED_AT_INDEX: CreatedAtIndex\r\n        ATTACHMENT_S3_BUCKET: udagram-cloud-develop-cd12101-images-${self:provider.stage}\r\n        SIGNED_URL_EXPIRATION: 300\r\n\r\n    logs:\r\n        # Enable API Gateway logs\r\n        restApi: true\r\n\r\n    iam:\r\n        role:\r\n            statements:\r\n                -   Effect: Allow\r\n                    Action:\r\n                        - xray:PutTelemetryRecords\r\n                        - xray:PutTraceSegments\r\n                        - s3:PutBucketPolicy\r\n                    Resource: \"*\"\r\n\r\ncustom:\r\n    documentation:\r\n        api:\r\n            info:\r\n                version: v1.0.0\r\n                title: Udacity Serverless TODO items\r\n                description: Serverless TODO items managant tool\r\n        models:\r\n            -   name: CreateTodoRequest\r\n                contentType: application/json\r\n                schema: ${file(models/create-todo-model.json)}\r\n            -   name: UpdateTodoRequest\r\n                contentType: application/json\r\n                schema: ${file(models/update-todo-model.json)}\r\n\r\nfunctions:\r\n\r\n    Auth:\r\n        handler: src/lambda/auth/auth0Authorizer.handler\r\n\r\n    # TODO: Configure this function -\r\n    # Provide iamRoleStatements property for performing Actions on DynamoDB\r\n    GetTodos:\r\n        handler: src/lambda/http/getTodos.handler\r\n        events:\r\n            -   http:\r\n                    method: get\r\n                    path: todos\r\n                    cors: true\r\n                    authorizer: Auth\r\n        iamRoleStatements:\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:Query\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:Query\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}/index/${self:provider.environment.TODOS_CREATED_AT_INDEX}\r\n\r\n    # TODO: Configure this function -\r\n    # Provide iamRoleStatements property. Decide the Actions and AWS Resource.\r\n    # To refer to an AWS resource defined in the \"Resources\" section, you can use \"Resource: !GetAtt <resource-name>.Arn\"\r\n    # To validate incoming HTTP requests, we have provided the request schemas in function definition below.\r\n    CreateTodo:\r\n        handler: src/lambda/http/createTodo.handler\r\n        events:\r\n            -   http:\r\n                    method: post\r\n                    path: todos\r\n                    cors: true\r\n                    authorizer: Auth\r\n                    request:\r\n                        schemas:\r\n                            application/json: ${file(models/create-todo-model.json)}\r\n                    reqValidatorName: RequestBodyValidator\r\n        iamRoleStatements:\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:PutItem\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\r\n\r\n    # TODO: Configure this function\r\n    # Provide property for setting up CORS, Authorizer, iamRoleStatements, and request schemas\r\n    UpdateTodo:\r\n        handler: src/lambda/http/updateTodo.handler\r\n        events:\r\n            -   http:\r\n                    method: patch\r\n                    path: todos/{todoId}\r\n                    cors: true\r\n                    request:\r\n                        schemas:\r\n                            application/json: ${file(models/update-todo-model.json)}\r\n                    reqValidatorName: RequestBodyValidator\r\n        iamRoleStatements:\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:UpdateItem\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\r\n\r\n\r\n    # TODO: Configure this function\r\n    # Provide property for setting up CORS, Authorizer, iamRoleStatements\r\n    DeleteTodo:\r\n        handler: src/lambda/http/deleteTodo.handler\r\n        events:\r\n            -   http:\r\n                    method: delete\r\n                    path: todos/{todoId}\r\n                    cors: true\r\n                    authorizer: Auth\r\n        iamRoleStatements:\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:DeleteItem\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\r\n            -   Effect: Allow\r\n                Action:\r\n                    - s3:DeleteObject\r\n                Resource: arn:aws:s3:::${self:provider.environment.ATTACHMENT_S3_BUCKET}/*\r\n\r\n    # TODO: Configure this function\r\n    # Provide property for setting up CORS, Authorizer, iamRoleStatements\r\n    GenerateUploadUrl:\r\n        handler: src/lambda/http/generateUploadUrl.handler\r\n        events:\r\n            -   http:\r\n                    method: post\r\n                    path: todos/{todoId}/attachment\r\n                    cors: true\r\n                    authorizer: Auth\r\n        iamRoleStatements:\r\n            -   Effect: Allow\r\n                Action:\r\n                    - s3:PutObject\r\n                Resource: arn:aws:s3:::${self:provider.environment.ATTACHMENT_S3_BUCKET}/*\r\n            -   Effect: Allow\r\n                Action:\r\n                    - dynamodb:UpdateItem\r\n                Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}\r\n\r\nresources:\r\n    Resources:\r\n        # Add necessary AWS resources. You will need at least the following AWS resources\r\n        # TODO: Fill the properties\r\n        # Feel free to change the names as you like.\r\n        GatewayResponseDefault4XX:\r\n            Type: AWS::ApiGateway::GatewayResponse\r\n            Properties:\r\n                ResponseParameters:\r\n                    gatewayresponse.header.Access-Control-Allow-Origin: \"'*'\"\r\n                    gatewayresponse.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\r\n                    gatewayresponse.header.Access-Control-Allow-Methods: \"'GET,OPTIONS,POST'\"\r\n                ResponseType: DEFAULT_4XX\r\n                RestApiId:\r\n                    Ref: ApiGatewayRestApi\r\n\r\n        # TODO: Create a DynamoDB table with local secondary index and a composite key\r\n        TodosTable:\r\n            Type: AWS::DynamoDB::Table\r\n            Properties:\r\n                AttributeDefinitions:\r\n                    -   AttributeName: userId\r\n                        AttributeType: S\r\n                    -   AttributeName: todoId\r\n                        AttributeType: S\r\n                    -   AttributeName: createAt\r\n                        AttributeType: S\r\n                KeySchema:\r\n                    -   AttributeName: userId\r\n                        KeyType: HASH\r\n                    -   AttributeName: todoId\r\n                        KeyType: RANGE\r\n                BillingMode: PAY_PER_REQUEST\r\n                TableName: ${self:provider.environment.TODOS_TABLE}\r\n                GlobalSecondaryIndexes:\r\n                    -   IndexName: ${self:provider.environment.TODOS_CREATED_AT_INDEX}\r\n                        KeySchema:\r\n                            -   AttributeName: userId\r\n                                KeyType: HASH\r\n                            -   AttributeName: createAt\r\n                                KeyType: RANGE\r\n                        Projection:\r\n                            ProjectionType: ALL\r\n\r\n        # TODO: Complete the bucket properties below.\r\n        # Do not forget to add the CorsConfiguration propoerty\r\n        AttachmentsBucket:\r\n            Type: AWS::S3::Bucket\r\n            Properties:\r\n                BucketName: ${self:provider.environment.ATTACHMENT_S3_BUCKET}\r\n                OwnershipControls:\r\n                    Rules:\r\n                        - ObjectOwnership: ObjectWriter\r\n                PublicAccessBlockConfiguration:\r\n                    BlockPublicAcls: false\r\n                    BlockPublicPolicy: false\r\n                    IgnorePublicAcls: false\r\n                    RestrictPublicBuckets: false\r\n                CorsConfiguration:\r\n                    CorsRules:\r\n                        -   AllowedOrigins:\r\n                                - \"*\"\r\n                            AllowedHeaders:\r\n                                - \"*\"\r\n                            AllowedMethods:\r\n                                - GET\r\n                                - PUT\r\n                                - POST\r\n                                - DELETE\r\n                                - HEAD\r\n                            MaxAge: 3000\r\n\r\n        # TODO: Complete the policy below and attach it to the bucket defined above\r\n        # For cross referencing the name of the bucket, use \"!Ref AttachmentsBucket\"\r\n        BucketPolicy:\r\n            Type: AWS::S3::BucketPolicy\r\n            Properties:\r\n                PolicyDocument:\r\n                    Id: MyPolicy\r\n                    Version: \"2012-10-17\"\r\n                    Statement:\r\n                        -   Sid: PublicReadForGetBucketObjects\r\n                            Effect: Allow\r\n                            Principal: \"*\"\r\n                            Action: \"*\"\r\n                            Resource: \"arn:aws:s3:::${self:provider.environment.ATTACHMENT_S3_BUCKET}/*\"\r\n                Bucket: !Ref AttachmentsBucket\r\n\r\n        RequestBodyValidator:\r\n            Type: AWS::ApiGateway::RequestValidator\r\n            Properties:\r\n                Name: 'request-body-validator'\r\n                RestApiId:\r\n                    Ref: ApiGatewayRestApi\r\n                ValidateRequestBody: true\r\n                ValidateRequestParameters: false\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "6db972be39536a6267310b485628ae2c",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "7dd02151-866e-4e2b-a9fd-eb58b3b819d3",
    "orgName": "hoangtn11",
    "userId": "lN8tsw7GmBSVr70w98",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "hoangtn11",
    "subscription": null,
    "userEmail": "hoangtn0109@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "672810836476",
    "projectType": "traditional",
    "versionSf": "4.4.1",
    "serviceProviderAwsCfStackName": "udagram-cloud-develop-cd12101-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:672810836476:stack/udagram-cloud-develop-cd12101-dev/a28e51c0-7ab5-11ef-a66c-0affcc38d041",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:672810836476:stack/udagram-cloud-develop-cd12101-dev/a28e51c0-7ab5-11ef-a66c-0affcc38d041",
    "serviceProviderAwsCfStackCreated": "2024-09-24T20:43:20.843Z",
    "serviceProviderAwsCfStackUpdated": "2024-09-24T21:51:18.387Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AuthLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-Auth:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-AuthLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GenerateUploadUrlLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-GenerateUploadUrl:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-UpdateTodo:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-UpdateTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetTodosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-GetTodos:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-GetTodosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-DeleteTodo:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-DeleteTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:672810836476:function:udagram-cloud-develop-cd12101-dev-CreateTodo:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-CreateTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://fd2b32lqb2.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-2f9906a1-6f0a",
        "ExportName": "sls-udagram-cloud-develop-cd12101-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}